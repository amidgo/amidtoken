// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"privateProvider_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"publicProvider_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"investor1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"investor2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"friend\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"changeCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPhase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isAccept\",\"type\":\"bool\"}],\"name\":\"handleRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"phaseTokenLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"privateProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"privateTokenTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"publicTokenTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"requests\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"seedTokenTx\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"sendRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"setUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeDiff\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeTravel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend, owner_ common.Address, privateProvider_ common.Address, publicProvider_ common.Address, investor1 common.Address, investor2 common.Address, friend common.Address) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend, owner_, privateProvider_, publicProvider_, investor1, investor2, friend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ContractABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address , address ) view returns(uint256)
func (_Contract *ContractCaller) Allowance(opts *bind.CallOpts, arg0 common.Address, arg1 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "allowance", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address , address ) view returns(uint256)
func (_Contract *ContractSession) Allowance(arg0 common.Address, arg1 common.Address) (*big.Int, error) {
	return _Contract.Contract.Allowance(&_Contract.CallOpts, arg0, arg1)
}

// Allowance is a free data retrieval call binding the contract method 0xdd62ed3e.
//
// Solidity: function allowance(address , address ) view returns(uint256)
func (_Contract *ContractCallerSession) Allowance(arg0 common.Address, arg1 common.Address) (*big.Int, error) {
	return _Contract.Contract.Allowance(&_Contract.CallOpts, arg0, arg1)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address ) view returns(uint256)
func (_Contract *ContractCaller) BalanceOf(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "balanceOf", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address ) view returns(uint256)
func (_Contract *ContractSession) BalanceOf(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.BalanceOf(&_Contract.CallOpts, arg0)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address ) view returns(uint256)
func (_Contract *ContractCallerSession) BalanceOf(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.BalanceOf(&_Contract.CallOpts, arg0)
}

// Cost is a free data retrieval call binding the contract method 0x13faede6.
//
// Solidity: function cost() view returns(uint256)
func (_Contract *ContractCaller) Cost(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "cost")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Cost is a free data retrieval call binding the contract method 0x13faede6.
//
// Solidity: function cost() view returns(uint256)
func (_Contract *ContractSession) Cost() (*big.Int, error) {
	return _Contract.Contract.Cost(&_Contract.CallOpts)
}

// Cost is a free data retrieval call binding the contract method 0x13faede6.
//
// Solidity: function cost() view returns(uint256)
func (_Contract *ContractCallerSession) Cost() (*big.Int, error) {
	return _Contract.Contract.Cost(&_Contract.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint256)
func (_Contract *ContractCaller) Decimals(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint256)
func (_Contract *ContractSession) Decimals() (*big.Int, error) {
	return _Contract.Contract.Decimals(&_Contract.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint256)
func (_Contract *ContractCallerSession) Decimals() (*big.Int, error) {
	return _Contract.Contract.Decimals(&_Contract.CallOpts)
}

// GetPhase is a free data retrieval call binding the contract method 0xeced0280.
//
// Solidity: function getPhase() view returns(string)
func (_Contract *ContractCaller) GetPhase(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPhase")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetPhase is a free data retrieval call binding the contract method 0xeced0280.
//
// Solidity: function getPhase() view returns(string)
func (_Contract *ContractSession) GetPhase() (string, error) {
	return _Contract.Contract.GetPhase(&_Contract.CallOpts)
}

// GetPhase is a free data retrieval call binding the contract method 0xeced0280.
//
// Solidity: function getPhase() view returns(string)
func (_Contract *ContractCallerSession) GetPhase() (string, error) {
	return _Contract.Contract.GetPhase(&_Contract.CallOpts)
}

// GetTime is a free data retrieval call binding the contract method 0x557ed1ba.
//
// Solidity: function getTime() view returns(uint256)
func (_Contract *ContractCaller) GetTime(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getTime")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTime is a free data retrieval call binding the contract method 0x557ed1ba.
//
// Solidity: function getTime() view returns(uint256)
func (_Contract *ContractSession) GetTime() (*big.Int, error) {
	return _Contract.Contract.GetTime(&_Contract.CallOpts)
}

// GetTime is a free data retrieval call binding the contract method 0x557ed1ba.
//
// Solidity: function getTime() view returns(uint256)
func (_Contract *ContractCallerSession) GetTime() (*big.Int, error) {
	return _Contract.Contract.GetTime(&_Contract.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Contract *ContractCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Contract *ContractSession) Name() (string, error) {
	return _Contract.Contract.Name(&_Contract.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_Contract *ContractCallerSession) Name() (string, error) {
	return _Contract.Contract.Name(&_Contract.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contract *ContractCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contract *ContractSession) Owner() (common.Address, error) {
	return _Contract.Contract.Owner(&_Contract.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contract *ContractCallerSession) Owner() (common.Address, error) {
	return _Contract.Contract.Owner(&_Contract.CallOpts)
}

// PhaseTokenLimit is a free data retrieval call binding the contract method 0x4f3fb0c9.
//
// Solidity: function phaseTokenLimit() view returns(uint256)
func (_Contract *ContractCaller) PhaseTokenLimit(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "phaseTokenLimit")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PhaseTokenLimit is a free data retrieval call binding the contract method 0x4f3fb0c9.
//
// Solidity: function phaseTokenLimit() view returns(uint256)
func (_Contract *ContractSession) PhaseTokenLimit() (*big.Int, error) {
	return _Contract.Contract.PhaseTokenLimit(&_Contract.CallOpts)
}

// PhaseTokenLimit is a free data retrieval call binding the contract method 0x4f3fb0c9.
//
// Solidity: function phaseTokenLimit() view returns(uint256)
func (_Contract *ContractCallerSession) PhaseTokenLimit() (*big.Int, error) {
	return _Contract.Contract.PhaseTokenLimit(&_Contract.CallOpts)
}

// PrivateProvider is a free data retrieval call binding the contract method 0xba944845.
//
// Solidity: function privateProvider() view returns(address)
func (_Contract *ContractCaller) PrivateProvider(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "privateProvider")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PrivateProvider is a free data retrieval call binding the contract method 0xba944845.
//
// Solidity: function privateProvider() view returns(address)
func (_Contract *ContractSession) PrivateProvider() (common.Address, error) {
	return _Contract.Contract.PrivateProvider(&_Contract.CallOpts)
}

// PrivateProvider is a free data retrieval call binding the contract method 0xba944845.
//
// Solidity: function privateProvider() view returns(address)
func (_Contract *ContractCallerSession) PrivateProvider() (common.Address, error) {
	return _Contract.Contract.PrivateProvider(&_Contract.CallOpts)
}

// PrivateTokenTx is a free data retrieval call binding the contract method 0x48e80265.
//
// Solidity: function privateTokenTx(address ) view returns(uint256)
func (_Contract *ContractCaller) PrivateTokenTx(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "privateTokenTx", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PrivateTokenTx is a free data retrieval call binding the contract method 0x48e80265.
//
// Solidity: function privateTokenTx(address ) view returns(uint256)
func (_Contract *ContractSession) PrivateTokenTx(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.PrivateTokenTx(&_Contract.CallOpts, arg0)
}

// PrivateTokenTx is a free data retrieval call binding the contract method 0x48e80265.
//
// Solidity: function privateTokenTx(address ) view returns(uint256)
func (_Contract *ContractCallerSession) PrivateTokenTx(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.PrivateTokenTx(&_Contract.CallOpts, arg0)
}

// PublicProvider is a free data retrieval call binding the contract method 0xefb82060.
//
// Solidity: function publicProvider() view returns(address)
func (_Contract *ContractCaller) PublicProvider(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "publicProvider")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PublicProvider is a free data retrieval call binding the contract method 0xefb82060.
//
// Solidity: function publicProvider() view returns(address)
func (_Contract *ContractSession) PublicProvider() (common.Address, error) {
	return _Contract.Contract.PublicProvider(&_Contract.CallOpts)
}

// PublicProvider is a free data retrieval call binding the contract method 0xefb82060.
//
// Solidity: function publicProvider() view returns(address)
func (_Contract *ContractCallerSession) PublicProvider() (common.Address, error) {
	return _Contract.Contract.PublicProvider(&_Contract.CallOpts)
}

// PublicTokenTx is a free data retrieval call binding the contract method 0x2ea742e4.
//
// Solidity: function publicTokenTx(address ) view returns(uint256)
func (_Contract *ContractCaller) PublicTokenTx(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "publicTokenTx", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PublicTokenTx is a free data retrieval call binding the contract method 0x2ea742e4.
//
// Solidity: function publicTokenTx(address ) view returns(uint256)
func (_Contract *ContractSession) PublicTokenTx(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.PublicTokenTx(&_Contract.CallOpts, arg0)
}

// PublicTokenTx is a free data retrieval call binding the contract method 0x2ea742e4.
//
// Solidity: function publicTokenTx(address ) view returns(uint256)
func (_Contract *ContractCallerSession) PublicTokenTx(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.PublicTokenTx(&_Contract.CallOpts, arg0)
}

// RequestAddresses is a free data retrieval call binding the contract method 0xd8929eb2.
//
// Solidity: function requestAddresses(uint256 ) view returns(address)
func (_Contract *ContractCaller) RequestAddresses(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "requestAddresses", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RequestAddresses is a free data retrieval call binding the contract method 0xd8929eb2.
//
// Solidity: function requestAddresses(uint256 ) view returns(address)
func (_Contract *ContractSession) RequestAddresses(arg0 *big.Int) (common.Address, error) {
	return _Contract.Contract.RequestAddresses(&_Contract.CallOpts, arg0)
}

// RequestAddresses is a free data retrieval call binding the contract method 0xd8929eb2.
//
// Solidity: function requestAddresses(uint256 ) view returns(address)
func (_Contract *ContractCallerSession) RequestAddresses(arg0 *big.Int) (common.Address, error) {
	return _Contract.Contract.RequestAddresses(&_Contract.CallOpts, arg0)
}

// Requests is a free data retrieval call binding the contract method 0x74adad1d.
//
// Solidity: function requests(address ) view returns(string)
func (_Contract *ContractCaller) Requests(opts *bind.CallOpts, arg0 common.Address) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "requests", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Requests is a free data retrieval call binding the contract method 0x74adad1d.
//
// Solidity: function requests(address ) view returns(string)
func (_Contract *ContractSession) Requests(arg0 common.Address) (string, error) {
	return _Contract.Contract.Requests(&_Contract.CallOpts, arg0)
}

// Requests is a free data retrieval call binding the contract method 0x74adad1d.
//
// Solidity: function requests(address ) view returns(string)
func (_Contract *ContractCallerSession) Requests(arg0 common.Address) (string, error) {
	return _Contract.Contract.Requests(&_Contract.CallOpts, arg0)
}

// SeedTokenTx is a free data retrieval call binding the contract method 0xc181e04f.
//
// Solidity: function seedTokenTx(address ) view returns(uint256)
func (_Contract *ContractCaller) SeedTokenTx(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "seedTokenTx", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SeedTokenTx is a free data retrieval call binding the contract method 0xc181e04f.
//
// Solidity: function seedTokenTx(address ) view returns(uint256)
func (_Contract *ContractSession) SeedTokenTx(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.SeedTokenTx(&_Contract.CallOpts, arg0)
}

// SeedTokenTx is a free data retrieval call binding the contract method 0xc181e04f.
//
// Solidity: function seedTokenTx(address ) view returns(uint256)
func (_Contract *ContractCallerSession) SeedTokenTx(arg0 common.Address) (*big.Int, error) {
	return _Contract.Contract.SeedTokenTx(&_Contract.CallOpts, arg0)
}

// StartTime is a free data retrieval call binding the contract method 0x78e97925.
//
// Solidity: function startTime() view returns(uint256)
func (_Contract *ContractCaller) StartTime(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "startTime")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StartTime is a free data retrieval call binding the contract method 0x78e97925.
//
// Solidity: function startTime() view returns(uint256)
func (_Contract *ContractSession) StartTime() (*big.Int, error) {
	return _Contract.Contract.StartTime(&_Contract.CallOpts)
}

// StartTime is a free data retrieval call binding the contract method 0x78e97925.
//
// Solidity: function startTime() view returns(uint256)
func (_Contract *ContractCallerSession) StartTime() (*big.Int, error) {
	return _Contract.Contract.StartTime(&_Contract.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Contract *ContractCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Contract *ContractSession) Symbol() (string, error) {
	return _Contract.Contract.Symbol(&_Contract.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_Contract *ContractCallerSession) Symbol() (string, error) {
	return _Contract.Contract.Symbol(&_Contract.CallOpts)
}

// TimeDiff is a free data retrieval call binding the contract method 0x8b1014c4.
//
// Solidity: function timeDiff() view returns(uint256)
func (_Contract *ContractCaller) TimeDiff(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "timeDiff")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TimeDiff is a free data retrieval call binding the contract method 0x8b1014c4.
//
// Solidity: function timeDiff() view returns(uint256)
func (_Contract *ContractSession) TimeDiff() (*big.Int, error) {
	return _Contract.Contract.TimeDiff(&_Contract.CallOpts)
}

// TimeDiff is a free data retrieval call binding the contract method 0x8b1014c4.
//
// Solidity: function timeDiff() view returns(uint256)
func (_Contract *ContractCallerSession) TimeDiff() (*big.Int, error) {
	return _Contract.Contract.TimeDiff(&_Contract.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Contract *ContractCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Contract *ContractSession) TotalSupply() (*big.Int, error) {
	return _Contract.Contract.TotalSupply(&_Contract.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_Contract *ContractCallerSession) TotalSupply() (*big.Int, error) {
	return _Contract.Contract.TotalSupply(&_Contract.CallOpts)
}

// UserAddresses is a free data retrieval call binding the contract method 0x502c9bd5.
//
// Solidity: function userAddresses(uint256 ) view returns(address)
func (_Contract *ContractCaller) UserAddresses(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "userAddresses", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// UserAddresses is a free data retrieval call binding the contract method 0x502c9bd5.
//
// Solidity: function userAddresses(uint256 ) view returns(address)
func (_Contract *ContractSession) UserAddresses(arg0 *big.Int) (common.Address, error) {
	return _Contract.Contract.UserAddresses(&_Contract.CallOpts, arg0)
}

// UserAddresses is a free data retrieval call binding the contract method 0x502c9bd5.
//
// Solidity: function userAddresses(uint256 ) view returns(address)
func (_Contract *ContractCallerSession) UserAddresses(arg0 *big.Int) (common.Address, error) {
	return _Contract.Contract.UserAddresses(&_Contract.CallOpts, arg0)
}

// Users is a free data retrieval call binding the contract method 0xa87430ba.
//
// Solidity: function users(address ) view returns(string)
func (_Contract *ContractCaller) Users(opts *bind.CallOpts, arg0 common.Address) (string, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "users", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Users is a free data retrieval call binding the contract method 0xa87430ba.
//
// Solidity: function users(address ) view returns(string)
func (_Contract *ContractSession) Users(arg0 common.Address) (string, error) {
	return _Contract.Contract.Users(&_Contract.CallOpts, arg0)
}

// Users is a free data retrieval call binding the contract method 0xa87430ba.
//
// Solidity: function users(address ) view returns(string)
func (_Contract *ContractCallerSession) Users(arg0 common.Address) (string, error) {
	return _Contract.Contract.Users(&_Contract.CallOpts, arg0)
}

// WhiteList is a free data retrieval call binding the contract method 0x372c12b1.
//
// Solidity: function whiteList(address ) view returns(bool)
func (_Contract *ContractCaller) WhiteList(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "whiteList", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// WhiteList is a free data retrieval call binding the contract method 0x372c12b1.
//
// Solidity: function whiteList(address ) view returns(bool)
func (_Contract *ContractSession) WhiteList(arg0 common.Address) (bool, error) {
	return _Contract.Contract.WhiteList(&_Contract.CallOpts, arg0)
}

// WhiteList is a free data retrieval call binding the contract method 0x372c12b1.
//
// Solidity: function whiteList(address ) view returns(bool)
func (_Contract *ContractCallerSession) WhiteList(arg0 common.Address) (bool, error) {
	return _Contract.Contract.WhiteList(&_Contract.CallOpts, arg0)
}

// Approve is a paid mutator transaction binding the contract method 0xe1f21c67.
//
// Solidity: function approve(address from, address to, uint256 amount) returns()
func (_Contract *ContractTransactor) Approve(opts *bind.TransactOpts, from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "approve", from, to, amount)
}

// Approve is a paid mutator transaction binding the contract method 0xe1f21c67.
//
// Solidity: function approve(address from, address to, uint256 amount) returns()
func (_Contract *ContractSession) Approve(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Approve(&_Contract.TransactOpts, from, to, amount)
}

// Approve is a paid mutator transaction binding the contract method 0xe1f21c67.
//
// Solidity: function approve(address from, address to, uint256 amount) returns()
func (_Contract *ContractTransactorSession) Approve(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Approve(&_Contract.TransactOpts, from, to, amount)
}

// Buy is a paid mutator transaction binding the contract method 0xd96a094a.
//
// Solidity: function buy(uint256 amount) payable returns()
func (_Contract *ContractTransactor) Buy(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "buy", amount)
}

// Buy is a paid mutator transaction binding the contract method 0xd96a094a.
//
// Solidity: function buy(uint256 amount) payable returns()
func (_Contract *ContractSession) Buy(amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Buy(&_Contract.TransactOpts, amount)
}

// Buy is a paid mutator transaction binding the contract method 0xd96a094a.
//
// Solidity: function buy(uint256 amount) payable returns()
func (_Contract *ContractTransactorSession) Buy(amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Buy(&_Contract.TransactOpts, amount)
}

// ChangeCost is a paid mutator transaction binding the contract method 0x5cb85cd2.
//
// Solidity: function changeCost(uint256 newValue) returns()
func (_Contract *ContractTransactor) ChangeCost(opts *bind.TransactOpts, newValue *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "changeCost", newValue)
}

// ChangeCost is a paid mutator transaction binding the contract method 0x5cb85cd2.
//
// Solidity: function changeCost(uint256 newValue) returns()
func (_Contract *ContractSession) ChangeCost(newValue *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ChangeCost(&_Contract.TransactOpts, newValue)
}

// ChangeCost is a paid mutator transaction binding the contract method 0x5cb85cd2.
//
// Solidity: function changeCost(uint256 newValue) returns()
func (_Contract *ContractTransactorSession) ChangeCost(newValue *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.ChangeCost(&_Contract.TransactOpts, newValue)
}

// HandleRequest is a paid mutator transaction binding the contract method 0xc3a920d4.
//
// Solidity: function handleRequest(address sender, bool isAccept) returns()
func (_Contract *ContractTransactor) HandleRequest(opts *bind.TransactOpts, sender common.Address, isAccept bool) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "handleRequest", sender, isAccept)
}

// HandleRequest is a paid mutator transaction binding the contract method 0xc3a920d4.
//
// Solidity: function handleRequest(address sender, bool isAccept) returns()
func (_Contract *ContractSession) HandleRequest(sender common.Address, isAccept bool) (*types.Transaction, error) {
	return _Contract.Contract.HandleRequest(&_Contract.TransactOpts, sender, isAccept)
}

// HandleRequest is a paid mutator transaction binding the contract method 0xc3a920d4.
//
// Solidity: function handleRequest(address sender, bool isAccept) returns()
func (_Contract *ContractTransactorSession) HandleRequest(sender common.Address, isAccept bool) (*types.Transaction, error) {
	return _Contract.Contract.HandleRequest(&_Contract.TransactOpts, sender, isAccept)
}

// SendRequest is a paid mutator transaction binding the contract method 0xb2adc1d9.
//
// Solidity: function sendRequest(string _name) returns()
func (_Contract *ContractTransactor) SendRequest(opts *bind.TransactOpts, _name string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "sendRequest", _name)
}

// SendRequest is a paid mutator transaction binding the contract method 0xb2adc1d9.
//
// Solidity: function sendRequest(string _name) returns()
func (_Contract *ContractSession) SendRequest(_name string) (*types.Transaction, error) {
	return _Contract.Contract.SendRequest(&_Contract.TransactOpts, _name)
}

// SendRequest is a paid mutator transaction binding the contract method 0xb2adc1d9.
//
// Solidity: function sendRequest(string _name) returns()
func (_Contract *ContractTransactorSession) SendRequest(_name string) (*types.Transaction, error) {
	return _Contract.Contract.SendRequest(&_Contract.TransactOpts, _name)
}

// SetUser is a paid mutator transaction binding the contract method 0x3f1a51b8.
//
// Solidity: function setUser(address addr, string role) returns()
func (_Contract *ContractTransactor) SetUser(opts *bind.TransactOpts, addr common.Address, role string) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "setUser", addr, role)
}

// SetUser is a paid mutator transaction binding the contract method 0x3f1a51b8.
//
// Solidity: function setUser(address addr, string role) returns()
func (_Contract *ContractSession) SetUser(addr common.Address, role string) (*types.Transaction, error) {
	return _Contract.Contract.SetUser(&_Contract.TransactOpts, addr, role)
}

// SetUser is a paid mutator transaction binding the contract method 0x3f1a51b8.
//
// Solidity: function setUser(address addr, string role) returns()
func (_Contract *ContractTransactorSession) SetUser(addr common.Address, role string) (*types.Transaction, error) {
	return _Contract.Contract.SetUser(&_Contract.TransactOpts, addr, role)
}

// TimeTravel is a paid mutator transaction binding the contract method 0x4be867dd.
//
// Solidity: function timeTravel() returns()
func (_Contract *ContractTransactor) TimeTravel(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "timeTravel")
}

// TimeTravel is a paid mutator transaction binding the contract method 0x4be867dd.
//
// Solidity: function timeTravel() returns()
func (_Contract *ContractSession) TimeTravel() (*types.Transaction, error) {
	return _Contract.Contract.TimeTravel(&_Contract.TransactOpts)
}

// TimeTravel is a paid mutator transaction binding the contract method 0x4be867dd.
//
// Solidity: function timeTravel() returns()
func (_Contract *ContractTransactorSession) TimeTravel() (*types.Transaction, error) {
	return _Contract.Contract.TimeTravel(&_Contract.TransactOpts)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns()
func (_Contract *ContractTransactor) Transfer(opts *bind.TransactOpts, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "transfer", to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns()
func (_Contract *ContractSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Transfer(&_Contract.TransactOpts, to, amount)
}

// Transfer is a paid mutator transaction binding the contract method 0xa9059cbb.
//
// Solidity: function transfer(address to, uint256 amount) returns()
func (_Contract *ContractTransactorSession) Transfer(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.Transfer(&_Contract.TransactOpts, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns()
func (_Contract *ContractTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "transferFrom", from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns()
func (_Contract *ContractSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.TransferFrom(&_Contract.TransactOpts, from, to, amount)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 amount) returns()
func (_Contract *ContractTransactorSession) TransferFrom(from common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contract.Contract.TransferFrom(&_Contract.TransactOpts, from, to, amount)
}
